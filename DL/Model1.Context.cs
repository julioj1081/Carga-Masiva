//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JFernandezTPEntities2 : DbContext
    {
        public JFernandezTPEntities2()
            : base("name=JFernandezTPEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int AddUsuario(string rFC, Nullable<int> numUsuario, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaControl, Nullable<decimal> salario)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var numUsuarioParameter = numUsuario.HasValue ?
                new ObjectParameter("NumUsuario", numUsuario) :
                new ObjectParameter("NumUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaControlParameter = fechaControl.HasValue ?
                new ObjectParameter("FechaControl", fechaControl) :
                new ObjectParameter("FechaControl", typeof(System.DateTime));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUsuario", rFCParameter, numUsuarioParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaControlParameter, salarioParameter);
        }
    
        public virtual ObjectResult<GetAllEmpleados_Result> GetAllEmpleados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmpleados_Result>("GetAllEmpleados");
        }
    
        public virtual int DeleteUsuario(string rFC)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUsuario", rFCParameter);
        }
    
        public virtual int UpdateUsuario(string rFC, Nullable<int> numUsuario, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaControl, Nullable<decimal> salario)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var numUsuarioParameter = numUsuario.HasValue ?
                new ObjectParameter("NumUsuario", numUsuario) :
                new ObjectParameter("NumUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaControlParameter = fechaControl.HasValue ?
                new ObjectParameter("FechaControl", fechaControl) :
                new ObjectParameter("FechaControl", typeof(System.DateTime));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUsuario", rFCParameter, numUsuarioParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaControlParameter, salarioParameter);
        }
    }
}
